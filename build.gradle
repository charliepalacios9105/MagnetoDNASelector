plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'org.sonarqube' version '3.3'
}

group = 'com.camp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco.xml")
        csv.enabled false
        html.destination file("${buildDir}/reports/jacoco.Html")
    }
}

jacoco {
    toolVersion = "0.8.5"
}

sonarqube {
    properties {
        property "sonar.projectKey", "charliepalacios9105_MagnetoDNASelector"
        property "sonar.organization", "charliepalacios9105"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.sourceEnconding", "UTF-8"
        property "sonar.sources", "src,deployment,settings.gradle,main.gradle,build.gradle"
        property "sonar.test", "src/test"
        property "sonar.java.binaries", ""
        property "sonar.junit.reportsPath", ""
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}
